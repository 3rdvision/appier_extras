#!/usr/bin/python
# -*- coding: utf-8 -*-

# Hive Appier Framework
# Copyright (c) 2008-2017 Hive Solutions Lda.
#
# This file is part of Hive Appier Framework.
#
# Hive Appier Framework is free software: you can redistribute it and/or modify
# it under the terms of the Apache License as published by the Apache
# Foundation, either version 2.0 of the License, or (at your option) any
# later version.
#
# Hive Appier Framework is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# Apache License for more details.
#
# You should have received a copy of the Apache License along with
# Hive Appier Framework. If not, see <http://www.apache.org/licenses/>.

__author__ = "João Magalhães <joamag@hive.pt>"
""" The author(s) of the module """

__version__ = "1.0.0"
""" The version of the module """

__revision__ = "$LastChangedRevision$"
""" The revision number of the module """

__date__ = "$LastChangedDate$"
""" The last change date of the module """

__copyright__ = "Copyright (c) 2008-2017 Hive Solutions Lda."
""" The copyright for the module """

__license__ = "Apache License, Version 2.0"
""" The license for the module """

import appier

from appier_extras.parts.admin.models import base

class OAuthToken(base.Base):

    access_token = appier.field(
        indexed = "hashed",
        safe = True,
        private = True
    )
    """ The actual string representing an authorization
    issued to the client """

    authorization_code = appier.field(
        indexed = "hashed",
        safe = True,
        private = True
    )
    """ The authorization code generated by the
    authorization server """

    authorization_code_date = appier.field(
        type = float,
        safe = True,
        private = True,
        meta = "datetime",
    )
    """ The date when the authorization code was generated """

    scope = appier.field(
        type = "list",
        secure = True
    )
    """ The oauth based scope string that "created" this
    token with its values sorted alphabetically """

    expires_in = appier.field(
        type = "integer"
    )
    """ The duration in seconds of the access token lifetime """

    redirect_uri = dict(
        index = "hashed",
        meta = "url",
        description = "Redirect URI"
    )
    """ An absolute uri to which the authorization server
    will redirect the user-agent to when the end-user
    authorization step is completed """

    refresh_token = dict(
        indexed = "hashed",
        safe = True,
        private = True
    )
    """ A token used by the client to obtain a new access token
    (in addition or as a replacement for an expired access
    token), without having to involve the resource owner. """

    username = dict(
        indexed = "hashed",
        safe = True,
        private = True
    )
    """ The name of the user that is authorized this
    access token, will be used for custom acl creation """

    acl_entries = dict(
        type = list,
        safe = True,
        private = True,
        description = "ACL Entries"
    )
    """ The acl entries associated with this access token """

    @classmethod
    def _readable(cls, plural = False):
        return "OAuth Tokens" if plural else "OAuth Token"
